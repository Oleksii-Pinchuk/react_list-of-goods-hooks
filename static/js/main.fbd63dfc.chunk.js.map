{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsList","map","good","goodsFromServer","App","useState","isListOpened","setIsListOpened","isReversed","setIsReversed","minWordsLength","setMinWordsLength","sortedBy","setSortedBy","searchedGoods","filter","length","sort","good1","good2","localeCompare","reverse","className","type","onClick","name","onChange","event","Number","target","value","num","ReactDOM","render","document","getElementById"],"mappings":"kNAMaA,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,6BACGA,EAAUC,KAAI,SAACC,GAAD,OACb,6BACGA,GADMA,SCNXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAwHaC,EArHO,WACpB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,mBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA+BMC,EAAgBX,EAAgBY,QAAO,SAAAb,GAAI,OAAIA,EAAKc,QAAUN,KAEpE,OAAQE,GACN,IAAK,SACHE,EAAcG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMF,OAASG,EAAMH,UAC1D,MAEF,IAAK,WACHF,EAAcG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAS7D,OAJIX,GACFM,EAAcO,UAId,sBAAKC,UAAU,MAAf,UACE,wCACEhB,GACA,wBACEiB,KAAK,SACLC,QAnDW,WACjBjB,GAAgB,IAgDZ,mBAQDD,GACC,qCACE,wBACEkB,QAxDM,WACdf,GAAeD,IAwDPe,KAAK,SAFP,qBAOA,wBACEC,QAtDW,WACnBX,EAAY,UACZJ,GAAc,IAqDNc,KAAK,SAFP,4BAOA,wBACEC,QAlEY,WACpBX,EAAY,YACZJ,GAAc,IAiENc,KAAK,SAFP,8BAOA,wBACEC,QA/DI,WACZf,GAAc,GACdI,EAAY,IACZF,EAAkB,IA6DVY,KAAK,SAFP,mBAOA,wBACEE,KAAK,SACLC,SAjEQ,SAACC,GACjBhB,EAAkBiB,OAAOD,EAAME,OAAOC,SAiE9BA,MAAOpB,EAHT,SAzFiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA8FzBT,KAAI,SAAA8B,GAAG,OACvB,wBACED,MAAOC,EADT,SAIGA,GAFIA,QAMX,cAAC,EAAD,CACE/B,UAAWc,WC3HvBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fbd63dfc.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsList: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsList }) => {\n  return (\n    <ul>\n      {goodsList.map((good) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isListOpened, setIsListOpened] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [minWordsLength, setMinWordsLength] = useState(1);\n  const [sortedBy, setSortedBy] = useState('');\n  const lengthVariations = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const listOpener = () => {\n    setIsListOpened(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortByAphabet = () => {\n    setSortedBy('alphabet');\n    setIsReversed(false);\n  };\n\n  const sortByLength = () => {\n    setSortedBy('length');\n    setIsReversed(false);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortedBy('');\n    setMinWordsLength(1);\n  };\n\n  const setLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setMinWordsLength(Number(event.target.value));\n  };\n\n  const searchedGoods = goodsFromServer.filter(good => good.length >= minWordsLength);\n\n  switch (sortedBy) {\n    case 'length':\n      searchedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case 'alphabet':\n      searchedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    searchedGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isListOpened && (\n        <button\n          type=\"button\"\n          onClick={listOpener}\n        >\n          Start\n        </button>\n      )}\n\n      {isListOpened && (\n        <>\n          <button\n            onClick={reverse}\n            type=\"button\"\n          >\n            reverse\n          </button>\n\n          <button\n            onClick={sortByLength}\n            type=\"button\"\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={sortByAphabet}\n            type=\"button\"\n          >\n            Sort by alphabet\n          </button>\n\n          <button\n            onClick={reset}\n            type=\"button\"\n          >\n            Reset\n          </button>\n\n          <select\n            name=\"select\"\n            onChange={setLength}\n            value={minWordsLength}\n          >\n            {lengthVariations.map(num => (\n              <option\n                value={num}\n                key={num}\n              >\n                {num}\n              </option>\n            ))}\n          </select>\n          <GoodsList\n            goodsList={searchedGoods}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}